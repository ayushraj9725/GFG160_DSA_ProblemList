Problem : Missing in Array

Problem Statement :
You are given an array arr[] of size n - 1 that contains distinct integers in the range from 1 to n (inclusive). This array represents a permutation of the integers from 1 to n with one element missing. Your task is to identify and return the missing element.

Examples:

Input: arr[] = [1, 2, 3, 5]
Output: 4
Explanation: All the numbers from 1 to 5 are present except 4.

Input: arr[] = [8, 2, 4, 5, 3, 7, 1]
Output: 6
Explanation: All the numbers from 1 to 8 are present except 6.

Input: arr[] = [1]
Output: 2
Explanation: Only 1 is present so the missing element is 2.

Constraints:
1 ≤ arr.size() ≤ 106
1 ≤ arr[i] ≤ arr.size() + 1

Expected Complexities
Time Complexity : O(n)
Auxiliary Space : O(1)

Company Tags
Flipkart  Morgan Stanley  Accolite  Amazon  Microsoft  D-E-Shaw  Ola Cabs  Payu  VisaIntuit   Adobe   Cisco   Qualcomm  TCS


/******************************************************************** CPP SOLUTION OPTIMAL ********************************************************************/


class Solution {
  public:
    int missingNum(vector<int>& arr) {
        // code here
        
        int ans = 0 ;
        int xor1 = 0 , xor2 = 0 ;
        int n = arr.size() ;
        
        for(int i = 0 ; i < n ; i++){
            xor1 = xor1 ^ (i + 1) ;
            xor2 = xor2 ^ arr[i] ;
        }
        
        xor2 = xor2 ^ (n+1) ;
        
        ans = xor1 ^ xor2 ;
        
        return ans ;
        
        
    }
};