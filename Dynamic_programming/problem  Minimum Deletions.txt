problem : Minimum Deletions

Problem Statement : 
Given a string s, write a program to delete the minimum number of characters from the string so that the resultant string is a palindrome, while maintaining the order of characters.

Examples:

Input: s = "aebcbda"
Output: 2
Explanation: Remove characters 'e' and 'd'.

Input: s = "geeksforgeeks"
Output: 8
Explanation: To make "geeksforgeeks" a palindrome, the longest palindromic subsequence is "eefee" (length 5). The minimum deletions are:
13 (length of s) - 5 = 8.

Constraints:
1 ≤ s.size() ≤ 103

Expected Complexities
Time Complexity : O(n^2)
Auxiliary Space : O(n)


Company Tags
Amazon


/******************************************************************************    SOLUTIONS   ********************************************************************* /

Table of Content

[Naive Approach] Using Recursion - O(2^n) time and O(n) space




[Better Approach - 1] Using Top-Down DP (Memoization) – O(n^2) time and O(n^2) space




[Better Approach - 2] Using Bottom-Up DP (Tabulation) – O(n^2) time and O(n^2) space




[Efficient Approach - 1] Using Space Optimized DP - O(n^2) time and O(n) space




[Expected Approach - 2] Using Length of Longest Palindromic Subsequence - O(n^2) time and O(n) space



