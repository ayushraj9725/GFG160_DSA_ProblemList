Problem  : OverLapping  Intervals ( Day 24) : Link : https://www.geeksforgeeks.org/batch/gfg-160-problems/track/sorting-gfg-160/problem/overlapping-intervals--170633

Problem Statement : Given an array of Intervals arr[][], where arr[i] = [starti, endi]. The task is to merge all of the overlapping Intervals.

Examples:

Input: arr[][] = [[1,3],[2,4],[6,8],[9,10]]
Output: [[1,4], [6,8], [9,10]]
Explanation: In the given intervals we have only two overlapping intervals here, [1,3] and [2,4] which on merging will become [1,4]. Therefore we will return [[1,4], [6,8], [9,10]].
Input: arr[][] = [[6,8],[1,9],[2,4],[4,7]]
Output: [[1,9]]
Explanation: In the given intervals all the intervals overlap with the interval [1,9]. Therefore we will return [1,9].

/****************/

Code : 

 public List<int[]> mergeOverlap(int[][] arr) {
        // Code here // Code here
        
        List<int[]> ans = new ArrayList<>();
        Arrays.sort(arr,(a,b) -> a[0] - b[0]);
        
        int[] currentInterval = arr[0];
        ans.add(currentInterval);
        
        for(int[] interval :  arr){
            int currentEnd = currentInterval[1];
            int nextStart = interval[0];
            int nextEnd = interval[1];
            
            if(nextStart <= currentEnd){
                currentInterval[1] = Math.max(currentEnd,nextEnd);
            }
            else{
                currentInterval = interval ;
                ans.add(currentInterval);
            }
        }
        return ans ;
        
    }