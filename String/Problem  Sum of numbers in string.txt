Problem : Sum of numbers in string

Problem Statement  :
Given a string str containing alphanumeric characters. The task is to calculate the sum of all the numbers present in the string.

Examples:

Input: s = "1abc23"
Output: 24
Explanation: 1 and 23 are numbers in the string which is added to get the sum as 24.

Input: s = "geeks4geeks"
Output: 4
Explanation: 4 is the only number, so the sum is 4.

Constraints:
1 <= length of the string <= 105
The sum of Numbers <= 105

/************************************************************************************* SOLUTION C++ *******************************************************************/

class Solution {
  public:
    // Function to calculate sum of all numbers present in a string.
    int findSum(string& s) {

        // Your code here
        int ans =  0 ;
        int n = s.size() ;
        
        for(int i = 0 ; i < n ; i++){
           
           if(isdigit(s[i]) || s[i] == '-' && i+1 < n && isdigit(s[i+1])){
                
                string str = "";
                // Handle negative numbers
                if (s[i] == '-') {
                   str += s[i];
                   i++;
                }
                
                // extract the entire number 
                
                while(i < s.size() && isdigit(s[i])){
                    str += s[i];
                    i++ ;
                }
                
                ans += stoi(str);
                
                i--;
           }
           
        }
           
        return ans ;   
           
       }
};

/******************************************************************************** ANOTHER SOLUTION **************************************************************/


#include <iostream>
#include <string>
using namespace std;

int findSum(string& s) {
    int ans = 0;
    int n = s.size();

    for (int i = 0; i < n; i++) {
        // Check if the current character is a digit or a negative sign
        if (isdigit(s[i]) || (s[i] == '-' && i + 1 < n && isdigit(s[i + 1]))) {
            int sign = 1; // 1 for positive, -1 for negative
            if (s[i] == '-') {
                sign = -1;
                i++; // Move to the next character
            }

            int num = 0;
            // Extract the entire number
            while (i < n && isdigit(s[i])) {
                num = num * 10 + (s[i] - '0'); // Build the number digit by digit
                i++;
            }

            // Add the number to the sum (with sign)
            ans += sign * num;

            // Decrement i to account for the outer loop's increment
            i--;
        }
    }

    return ans;
}

int main() {
    string s = "abc123def-456ghi789";
    cout << "Sum of numbers in the string: " << findSum(s) << endl;

    return 0;
}