Problem : Count Pairs whose sum is less than target
Problem Link : https://www.geeksforgeeks.org/batch/gfg-160-problems/track/two-pointer-technique-gfg-160/problem/count-pairs-whose-sum-is-less-than-target

Problem Statement : 
Given an array arr[] and an integer target. You have to find the number of pairs in the array whose sum is strictly less than the target.

Examples:

Input: arr[] = [7, 2, 5, 3], target = 8
Output: 2
Explanation: There are 2 pairs with sum less than 8: (2, 5) and (2, 3). 

Input: arr[] = [5, 2, 3, 2, 4, 1], target = 5
Output: 4
Explanation: There are 4 pairs whose sum is less than 5: (2, 2), (2, 1), (3, 1) and (2, 1).

Input: arr[] = [2, 1, 8, 3, 4, 7, 6, 5], target = 7
Output: 6
Explanation: There are 6 pairs whose sum is less than 7: (2, 1), (2, 3), (2, 4), (1, 3), (1, 4) and (1, 5).
/***********************/
Constraints:
1 <= arr.size() <= 105
0 <= arr[i] <= 104
1 <= target <= 104
/************************/

SOLUTION : ::::::::::::::::::::::::::::::::::;  /******************* C++ Code *******************/

c++ Code :

class Solution {
  public:
    int countPairs(vector<int> &arr, int target) {
        // Your code here  
        int n = arr.size() ;
        //  use two pointer greedy for counting 
        int count = 0 ;
        // in first step sort the array 
        sort(arr.begin(),arr.end()) ;
        
        int i = 0 , j = n - 1 ;
        int sum = 0 ;
        while(i < j){
            sum = arr[i] + arr[j] ;
            
            if(sum < target){
                count = count + j - i ;
               //count++ ;
                i++ ;
            }
            else{
                j-- ;
            }
        }
        return count ;
        // Time complexity : O(nlogn + n) and space : O(1) 
        
      /*  // Brute Foce solution : O(N ^ 2) time taken
        int n = arr.size() ;
        int count = 0 ;
        for(int i = 0 ; i < n ; i++){
            for(int j = i+1 ; j < n ; j++){
                if(arr[i] + arr[j] < target) count++ ;
            }
        }
        return count ;
        */
        
    }
};

/ ************************************************ JAVA CODE ****************************************************************/

// Java program to count pairs with sum less 
// than target using two pointers technique

import java.util.Arrays;

class GfG {
    static int countPairs(int[] arr, int target) {
      
        // Sort the array to use two pointer technique
        Arrays.sort(arr);
        int left = 0, right = arr.length - 1;
        int cnt = 0;

        // Two pointer technique
        while (left < right) {
            int sum = arr[left] + arr[right];

            // If the sum is less than target, then arr[left] 
            // will form a valid pair with every element 
            // from index left + 1 to right.
            if (sum < target) {
                cnt += right - left;
                left++;
            } 
              else {
                right--;
            }
        }

        return cnt;
    }

    public static void main(String[] args) {
        int[] arr = { 2, 1, 8, 3, 4, 7, 6, 5 };
        int target = 7;
        System.out.println(countPairs(arr, target));
    }
}